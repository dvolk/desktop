---
- hosts: localhost
  connection: local

  tasks:
    - name: Install etckeeper
      become: true
      apt:
        update_cache: yes
        cache_valid_time: 36000
        state: latest
        pkg:
          - etckeeper

    - name: etckeeper commit
      become: true
      command: etckeeper commit "pre-ansible auto-commit"
      ignore_errors: yes

    - name: add contrib and non-free repos (debian)
      when: ansible_distribution == "Debian"
      become: true
      replace:
        dest: /etc/apt/sources.list
        regexp: '^(deb.+)(?<! contrib non-free)$'
        replace: '\1 contrib non-free'
      register: add_repos

    - name: update cache after adding repos (debian)
      when: ansible_distribution == "Debian" and add_repos.changed
      become: true
      apt:
        update_cache: yes
        cache_valid_time: 0

    - name: Install common packages
      become: true
      apt:
        update_cache: yes
        cache_valid_time: 36000
        state: latest
        pkg:
          - python-is-python3
          - jq
          - build-essential
          - python3-pip
          - python3-virtualenv
          - python3-watchdog
          - mypy
          - clangd
          - ccls
          - rsync
          - git
          - tmux
          - htop
          - iotop
          - bmon
          - powertop
          - lsof
          - imagemagick
          - ncdu
          - aria2
          - autoconf
          - automake
          - bzip2
          - fzf
          - g++
          - lnav
          - oathtool
          - p7zip
          - parallel
          - rdate
          - sqlite3
          - syncthing
          - tig
          - unace
          - unar
          - unrar
          - unzip
          - valgrind
          - tshark
          - zip
          - apt-file
          - autojump
          - bc
          - clamav
          - cloc
          - cmake
          - cmake-curses-gui
          - curl
          - dict-gcide
          - dictd
          - ranger
          - smartmontools
          - lshw
          - m4
          - mutt
          - openvpn
          - tinc
          - pwgen
          - sshfs
          - strace
          - tree
          - ufw
          - w3m
          - lynx
          - wget
          - whois
          - xdg-user-dirs
          - xz-utils
          - screenfetch
          - net-tools
          - aptitude
          - tlp
          - apparmor
          - apparmor-utils
          - apparmor-profiles
          - apparmor-profiles-extra
          - snapd
          - zenity
          - auditd
          - ngrep
          - pkg-config
          - gcc-10
          - libgccjit0
          - libgccjit-10-dev
          - libjansson4
          - libjansson-dev
          - docker.io
          - rtorrent
          - arj
          - lzip
          - lzop
          - ncompress
          - rar
          - rpm2cpio
          - rzip
          - unalz
          - p7zip-rar

    - name: Install emacs-nox
      become: true
      when: '"all" not in ansible_run_tags and "desktop" not in ansible_run_tags'
      apt:
        update_cache: yes
        cache_valid_time: 36000
        state: latest
        pkg:
          - emacs-nox

    - name: Install the build dependencies for package emacs
      become: true
      ansible.builtin.apt:
        pkg: emacs
        state: build-dep

    - name: Install lxd snap
      become: yes
      community.general.snap:
        name:
          - lxd

    - name: Install python dev packages
      become: true
      pip:
        name:
          - "python-lsp-server[all]"
          - isort
          - black
          - pylsp-mypy
          - pyls-flake8
          - pyls-isort
          - python-lsp-black
          - pyls-memestra
          - pylsp-rope

    - name: accept ms font eula (have not actually read it)
      become: true
      debconf:
        name: ttf-mscorefonts-installer
        question: msttcorefonts/accepted-mscorefonts-eula
        vtype: boolean
        value: true
      tags: desktop

    - name: Install Xorg and i3
      become: true
      apt:
        update_cache: yes
        cache_valid_time: 36000
        state: latest
        pkg:
          - i3
          - i3blocks
          - i3lock
          - xserver-xorg
          - xserver-xorg-input-all
          - xserver-xorg-input-synaptics
          - xserver-xorg-video-all
          - xinit
          - x11-apps
          - x11-utils
          - x11-xkb-utils
          - x11-xserver-utils
          - xterm
          - elementary-xfce-icon-theme
          - libglib2.0-bin
          - xclip
          - webp
          - fonts-dejavu
          - fonts-firacode
          - fonts-ubuntu
          - fonts-ubuntu-console
          - fonts-roboto
          - xfonts-terminus
          - ttf-mscorefonts-installer
          - xinput
      tags:
        - desktop

    - name: Install lightdm
      become: true
      apt:
        update_cache: yes
        cache_valid_time: 36000
        state: latest
        pkg:
          - lightdm
          - lightdm-gtk-greeter
      tags: desktop

    - name: Install desktop packages
      become: true
      apt:
        update_cache: yes
        cache_valid_time: 36000
        state: latest
        pkg:
          - feh
          - mpv
          - zathura
          - zathura-djvu
          - gimp
          - kitty
          - thunderbird
          - wireshark
          - thunar
          - mousepad
          - rawtherapee
          - cups
          - fbreader
          - lxappearance
          - gthumb
          - obs-studio
          - remmina
          - scrot
          - sunclock
          - virt-manager
          - transmission-remote-gtk
          - blueman
          - syncthing-gtk
          - gparted
          - gnome-disk-utility
          - pavucontrol
          - chromium
          - webext-ublock-origin-chromium
          - transmission-gtk
          - transmission-remote-gtk
          - engrampa
      tags:
        - desktop

    - name: Install emacs
      become: true
      apt:
        update_cache: yes
        cache_valid_time: 36000
        state: latest
        pkg:
          - emacs
      tags: desktop

    - name: Install firefox-esr (debian)
      when: ansible_distribution == "Debian"
      become: true
      apt:
        install_recommends: no
        update_cache: yes
        cache_valid_time: 36000
        state: latest
        pkg:
          - firefox-esr
      tags:
        - desktop

    - name: Install firefox-esr apparmor abstractions (debian)
      when: ansible_distribution == "Debian"
      become: true
      copy:
        src: ubuntu-browsers.d-firefox
        dest: /etc/apparmor.d/abstractions/ubuntu-browsers.d/firefox
      tags:
        - desktop

    - name: touch firefox apparmor profile
      become: yes
      file:
        dest: /etc/apparmor.d/local/usr.bin.firefox
        state: touch
      tags: desktop

    - name: Install firefox-esr apparmor profile (debian)
      when: ansible_distribution == "Debian"
      become: true
      copy:
        src: usr.bin.firefox-esr
        dest: /etc/apparmor.d/usr.bin.firefox-esr
      tags:
        - desktop

    - name: Enforce firefox-esr apparmor profile (debian)
      when: ansible_distribution == "Debian"
      become: true
      command: aa-enforce usr.bin.firefox
      tags: desktop

    - name: Install firefox (ubuntu)
      when: ansible_distribution == "Ubuntu"
      become: true
      apt:
        install_recommends: no
        update_cache: yes
        cache_valid_time: 36000
        state: latest
        pkg:
          - firefox
      tags:
        - desktop

    - name: Copy desktop background
      become: yes
      copy:
        src: desktop_background.png
        dest: /usr/local/share/desktop_background.png
      tags:
        - desktop

    - name: Set login screen background
      become: yes
      community.general.alternatives:
        name: desktop-login-background
        path: /usr/local/share/desktop_background.png
      tags:
        - desktop
      ignore_errors: yes

    - name: Install desktop packages (no recommends)
      become: true
      apt:
        install_recommends: no
        update_cache: yes
        cache_valid_time: 36000
        state: latest
        pkg:
          - barrier
          - libreoffice
          - webext-ublock-origin-firefox
      tags:
        - desktop
      ignore_errors: yes

    - name: Remove avahi-daemon, gdm3, etc
      become: true
      apt:
        state: absent
        pkg:
          - avahi-daemon
          - gdm3
          - command-not-found
          - motd-news-config

    - name: Create /opt
      become: yes
      file:
        path: /opt
        state: directory

    - name: Create /opt/tmp
      become: yes
      file:
        path: /opt/tmp
        state: directory
        mode: '777'

    - name: Download jetbrains font
      ansible.builtin.get_url:
        url: https://github.com/JetBrains/JetBrainsMono/releases/download/v2.242/JetBrainsMono-2.242.zip
        dest: /opt/tmp/JetBrainsMono.zip
        checksum: sha256:4e315b4ef176ce7ffc971b14997bdc8f646e3d1e5b913d1ecba3a3b10b4a1a9f
      tags:
        - desktop

    - name: Create font directory
      file:
        path: ~/.fonts
        state: directory
      tags:
        - desktop

    - name: Extract jetbrains font
      ansible.builtin.unarchive:
        src: /opt/tmp/JetBrainsMono.zip
        dest: ~/.fonts
      tags:
        - desktop

    - name: Create emacs directory
      file:
        path: ~/.emacs.d
        state: directory

    - name: Create emacs cache directory
      file:
        path: ~/.emacs.d/.cache
        state: directory

    - name: Copy treemacs persist file if it doesn't exist
      copy:
        src: treemacs-persist
        dest: ~/.emacs.d/.cache/treemacs-persist
        force: no

    - name: Copy emacs config
      copy:
        src: emacs-config
        dest: ~/.emacs.d/init.el

    - name: touch emacs custom config file
      file:
        dest: ~/.emacs.d/custom.el
        state: touch
        mode: u+rw,g-wx,o-rwx

    - name: Create i3 config directory
      file:
        path: ~/.config/i3
        state: directory
      tags:
        - desktop

    - name: Copy i3 config
      template:
        src: i3-config
        dest: ~/.config/i3/config
      tags:
        - desktop

    - name: Create i3blocks config directory
      file:
        path: ~/.config/i3blocks
        state: directory
      tags:
        - desktop

    - name: Copy i3blocks config
      copy:
        src: i3blocks-config
        dest: ~/.config/i3blocks/config
      tags:
        - desktop

    - name: Copy desktop setup script
      copy:
        src: start.sh
        dest: ~/start.sh
      tags:
        - desktop

    - name: Create kitty config directory
      file:
        path: ~/.config/kitty
        state: directory
      tags:
        - desktop

    - name: Copy kitty config
      template:
        src: kitty-config
        dest: ~/.config/kitty/kitty.conf
      tags:
        - desktop

    - name: Copy kitty theme
      copy:
        src: kitty-theme
        dest: ~/.config/kitty/current-theme.conf
      tags:
        - desktop

    - name: Create firefox-esr policies directory (debian)
      when: ansible_distribution == "Debian"
      become: true
      file:
        path: /usr/lib/firefox-esr/distribution/
        state: directory
      tags:
        - desktop

    - name: Copy firefox-esr policies (debian)
      when: ansible_distribution == "Debian"
      become: true
      copy:
        src: firefox-policies
        dest: /usr/lib/firefox-esr/distribution/policies.json
      tags:
        - desktop

    - name: Add firefox user prefs (debian)
      when: ansible_distribution == "Debian"
      become: true
      copy:
        src: firefox-prefs
        dest: /etc/firefox-esr/all-prefs.js
      tags:
        - desktop

    - name: Add firefox user prefs (ubuntu)
      when: ansible_distribution == "Ubuntu"
      become: true
      copy:
        src: firefox-prefs
        dest: /usr/lib/firefox/browser/defaults/preferences/all-prefs.js
      tags:
        - desktop

    - name: Create firefox policies directory (ubuntu deb)
      when: ansible_distribution == "Ubuntu" and ansible_lsb.major_release|int < 22
      become: true
      file:
        path: /usr/lib/firefox/distribution/
        state: directory
      tags:
        - desktop

    - name: Copy firefox policies (ubuntu deb)
      when: ansible_distribution == "Ubuntu" and ansible_lsb.major_release|int < 22
      become: true
      copy:
        src: firefox-policies
        dest: /usr/lib/firefox/distribution/policies.json
      tags:
        - desktop

    - name: Create firefox policies directory (ubuntu snap)
      when: ansible_distribution == "Ubuntu" and ansible_lsb.major_release|int >= 22
      become: true
      file:
        path: /etc/firefox/policies
        state: directory
      tags:
        - desktop

    - name: Copy firefox policies (ubuntu snap)
      when: ansible_distribution == "Ubuntu" and ansible_lsb.major_release|int >= 22
      become: true
      copy:
        src: firefox-policies
        dest: /etc/firefox/policies/policies.json
      tags:
        - desktop

    - name: Copy gtk2 config
      template:
        src: gtk2-config
        dest: ~/.gtkrc-2.0
      tags:
        - desktop

    - name: Create gtk3 config directory
      file:
        path: ~/.config/gtk-3.0
        state: directory
      tags:
        - desktop

    - name: Copy gtk3 config
      template:
        src: gtk3-config
        dest: ~/.config/gtk-3.0/settings.ini
      tags:
        - desktop

    - name: Enable firewall
      community.general.ufw:
        state: enabled
        direction: incoming
        policy: deny
      become: true
      tags:
        - desktop

    - name: Set firewall logging
      community.general.ufw:
        logging: 'on'
      become: true
      tags:
        - desktop

    - name: download adware+malware hosts file
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-gambling-porn-social/hosts
        dest: /opt/tmp/hosts
      tags:
        - desktop

    - name: download mozilla hosts file
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/MrRawes/firefox-hosts/firefox-hosts/hosts
        dest: /opt/tmp/mozilla-hosts
      tags:
        - desktop

    - name: download crypto hosts file
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/hoshsadiq/adblock-nocoin-list/master/hosts.txt
        dest: /opt/tmp/crypto-hosts
      tags:
        - desktop

    - name: insert hostname into /opt/tmp/hosts
      blockinfile:
        path: /opt/tmp/hosts
        block: |
          # block mozilla telemetry
          {{ lookup('file', '/opt/tmp/mozilla-hosts') }}
          # block crypto hosts
          {{ lookup('file', '/opt/tmp/crypto-hosts') }}
          # add localhost
          127.0.1.1 {{ ansible_hostname }}
      become: true
      tags:
        - desktop

    - name: copy adware+malware hosts file to /etc/hosts
      when: not lookup('env', 'DONTREPLACEHOSTS')|bool
      copy:
        src: /opt/tmp/hosts
        dest: /etc/hosts
      become: true
      tags:
        - desktop

    - name: Create command logs directory
      file:
        path: ~/.logs
        state: directory

    - name: Setup bashrc
      template:
        src: bashrc
        dest: ~/.bashrc

    - name: setup Xresources (user)
      template:
        src: xresources
        dest: ~/.Xresources
      tags:
        - desktop

    - name: check if /etc/X11/Xresources directory exists
      stat:
        path: /etc/X11/Xresources
      register: x11dir
      tags:
        - desktop

    - name: delete global Xresources directory
      file:
        path: /etc/X11/XResources
        state: absent
      when: x11dir.stat.exists and x11dir.stat.isdir
      tags:
        - desktop

    - name: setup Xresources (global)
      template:
        src: xresources
        dest: /etc/X11/Xresources
      become: yes
      tags:
        - desktop

    - name: Create xorg.conf.d directory
      become: yes
      file:
        path: /etc/X11/xorg.conf.d
        state: directory
      tags:
        - desktop

    - name: setup x11 synaptics
      copy:
        src: synaptics-config
        dest: /etc/X11/xorg.conf.d/70-synaptics.conf
      become: yes
      tags:
        - desktop

    - name: setup X11 dpi in lightdm
      template:
        src: lightdm-config
        dest: /etc/lightdm/lightdm.conf
      become: yes
      tags:
        - desktop

    - name: hide user images in lightdm-gtk-greeter
      community.general.ini_file:
        path: /etc/lightdm/lightdm-gtk-greeter.conf
        section: greeter
        option: hide-user-image
        value: "true"
      become: yes
      tags:
        - desktop

    - name: remove panel from lightdm-gtk-greeter
      community.general.ini_file:
        path: /etc/lightdm/lightdm-gtk-greeter.conf
        section: greeter
        option: indicators
        value: ""
      become: yes
      tags:
        - desktop

    - name: setup git
      copy:
        src: git-config
        dest: ~/.gitconfig

    - name: set gsettings key theme to emacs
      command: gsettings set org.gnome.desktop.interface gtk-key-theme "Emacs"
      tags:
        - desktop

    - name: disable gthumb extensions except list_tools
      command: "gsettings set org.gnome.gthumb.general active-extensions \"['list_tools']\""
      tags:
        - desktop

    - name: don't record app/file usage
      command: "{{ item }}"
      loop:
        - "gsettings set org.gnome.desktop.privacy remember-app-usage false"
        - "gsettings set org.gnome.desktop.privacy remember-recent-files false"
        - "gsettings set org.gnome.desktop.privacy report-technical-problems false"
        - "gsettings set org.gnome.desktop.privacy send-software-usage-stats false"
      tags:
        - desktop

    - name: add autologin group
      when: lookup('env', 'AUTOLOGIN')|bool
      become: yes
      group:
        name: autologin
        state: present

    - name: add user to autologin group
      when: lookup('env', 'AUTOLOGIN')|bool
      become: yes
      user:
        name: "{{ lookup('env', 'USER') }}"
        groups: autologin
        append: yes

    - name: add user to other groups
      become: yes
      user:
        name: "{{ lookup('env', 'USER') }}"
        groups: "{{ item }}"
        append: yes
      loop:
        - lpadmin
        - libvirt
        - lxd
        - docker

    - name: Create hierarchy of stuff
      file:
        path: "{{ item }}"
        state: directory
      tags:
        - desktop
      loop:
        - ~/stuff
        - ~/stuff/code
        - ~/stuff/code/work
        - ~/stuff/notes
        - ~/stuff/notes/work
        - ~/stuff/presentations
        - ~/stuff/mpv-screenshots
        - ~/stuff/docs
        - ~/stuff/docs/work
        - ~/stuff/screenshots
        - ~/stuff/screenshots/work
        - ~/stuff/logs
        - ~/stuff/images
        - ~/stuff/photos
        - ~/stuff/books
        - ~/stuff/books/fiction
        - ~/stuff/books/nonfiction
        - ~/stuff/audiobooks
        - ~/stuff/audiobooks/fiction
        - ~/stuff/audiobooks/nonfiction
        - ~/bin
        - ~/stuff/
        - ~/mnt
        - ~/mnt/phone
        - ~/sync
        - ~/torrents

    - name: touch ansible run log
      file:
        dest: ~/stuff/logs/ansible_desktop_run.log
        state: touch

    - name: get playbook git version
      shell: "git describe --tags --always --dirty"
      register: playbook_version

    - name: Add ansible run to log
      lineinfile:
        path: ~/stuff/logs/ansible_desktop_run.log
        line: "{{ ansible_date_time.iso8601 }} {{ playbook_version.stdout }} AUTOLOGIN={{ lookup('env', 'AUTOLOGIN') }} USER={{ lookup('env', 'USER') }} FONT_SIZE={{ lookup('env', 'FONT_SIZE') }} DPI={{ lookup('env', 'DPI') }}"
        insertbefore: EOF

    - name: Create mpv config directory
      file:
        path: ~/.config/mpv
        state: directory
      tags:
        - desktop

    - name: copy mpv config
      copy:
        src: mpv-config
        dest: ~/.config/mpv/mpv.conf
      tags:
        - desktop

    - name: copy mimetypes config
      copy:
        src: mimeapps.list
        dest: ~/.config/mimeapps.list
      tags:
        - desktop

    - name: Create gtk3 directory
      file:
        path: ~/.config/gtk-3.0
        state: directory
      tags:
        - desktop

    - name: copy file manager bookmarks
      template:
        src: fm-bookmarks
        dest: ~/.config/gtk-3.0/bookmarks
      tags:
        - desktop

    - name: copy flake8 config
      copy:
        src: flake8-config
        dest: ~/.config/flake8

    - name: download mongodb
      ansible.builtin.get_url:
        url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-debian11-5.0.8.tgz
        dest: /opt/tmp/mongodb-linux-x86_64-debian11-5.0.8.tgz
        checksum: sha256:dba4de0ebc12dd57bf1adfec071310a4a4b633017ab082c4605972dcca4d6811

    - name: Extract mongodb to /opt
      become: yes
      ansible.builtin.unarchive:
        src: /opt/tmp/mongodb-linux-x86_64-debian11-5.0.8.tgz
        dest: /opt

    - name: Create ~/.config/systemd/user
      file:
        path: ~/.config/systemd/user
        state: directory

    - name: Create ~/mongodb
      file:
        path: ~/mongodb
        state: directory

    - name: copy mongo systemd service
      template:
        src: mongodb-user-service
        dest: ~/.config/systemd/user/mongodb-user.service

    - name: reload systemd user service
      ansible.builtin.systemd:
        daemon_reexec: yes
        scope: user

    - name: enable and start mongodb service
      ansible.builtin.systemd:
        name: mongodb-user
        state: started
        enabled: yes
        scope: user

    - name: Download emacs
      ansible.builtin.get_url:
        url: https://mirror.lyrahosting.com/gnu/emacs/emacs-28.1.tar.xz
        dest: /opt/tmp/emacs-28.1.tar.xz
        checksum: sha256:28b1b3d099037a088f0a4ca251d7e7262eab5ea1677aabffa6c4426961ad75e1

    - name: Extract emacs to /opt
      become: yes
      ansible.builtin.unarchive:
        src: /opt/tmp/emacs-28.1.tar.xz
        dest: /opt

    - name: Create emacs note file
      become: yes
      file:
        path: /opt/emacs-28.1/NOTE.txt
        state: touch

    - name: Make a note on how to compile emacs
      become: yes
      blockinfile:
        path: /opt/emacs-28.1/NOTE.txt
        block: |
          # optional but recommended for heavy use
          sudo ./configure --with-native-compilation
          sudo make -j4

    - name: Download nim
      ansible.builtin.get_url:
        url: https://nim-lang.org/download/nim-1.6.6-linux_x64.tar.xz
        dest: /opt/tmp/nim-1.6.6-linux_x64.tar.xz
        checksum: sha256:3e88df45dbbec2f083d31e00e6f2c07e0c70c392c91b2a934f7f283dd0fdf5f9

    - name: Extract nim to /opt
      become: yes
      ansible.builtin.unarchive:
        src: /opt/tmp/nim-1.6.6-linux_x64.tar.xz
        dest: /opt

    - name: Download rust
      when: lookup('env', 'RUST')|bool
      ansible.builtin.get_url:
        url: https://static.rust-lang.org/dist/rust-1.62.1-x86_64-unknown-linux-gnu.tar.gz
        dest: /opt/tmp/rust-1.62.1-x86_64-unknown-linux-gnu.tar.gz
        checksum: sha256:dd7d82b8fa8eae59729e1c31fe59a9de6ee61d08ab40ce016185653beebe04d2

    - name: Extract rust to /opt/tmp
      when: lookup('env', 'RUST')|bool
      ansible.builtin.unarchive:
        src: /opt/tmp/rust-1.62.1-x86_64-unknown-linux-gnu.tar.gz
        dest: /opt/tmp

    - name: Create rust directory
      become: true
      when: lookup('env', 'RUST')|bool
      file:
        path: /opt/rust1621
        state: directory

    - name: Install rust
      become: true
      when: lookup('env', 'RUST')|bool
      command: "/opt/tmp/rust-1.62.1-x86_64-unknown-linux-gnu/install.sh --prefix=/opt/rust1621"

    - name: download nodejs
      ansible.builtin.get_url:
        url: https://nodejs.org/dist/v16.16.0/node-v16.16.0-linux-x64.tar.xz
        dest: /opt/tmp/node-v16.16.0-linux-x64.tar.xz
        checksum: sha256:edcb6e9bb049ae365611aa209fc03c4bfc7e0295dbcc5b2f1e710ac70384a8ec

    - name: Extract nodejs to /opt
      become: yes
      ansible.builtin.unarchive:
        src: /opt/tmp/node-v16.16.0-linux-x64.tar.xz
        dest: /opt

    - name: download minikube
      ansible.builtin.get_url:
        url: https://github.com/kubernetes/minikube/releases/download/v1.26.1/minikube-linux-amd64
        dest: /opt/tmp/minikube-linux-amd64
        checksum: sha256:9acd25706661b932ee98063147e58080cb949b92fd0d97b3b96dc5f898dcad21

    - name: Install minikube
      become: yes
      shell: install minikube-linux-amd64 /usr/local/bin/minikube
      args:
        chdir: /opt/tmp
        creates: /usr/local/bin/minikube

    - name: Set Chromium as default browser
      command: update-alternatives --install /usr/bin/x-www-browser x-www-browser /usr/bin/chromium 250
      become: yes
      tags: desktop

    # See https://www.chromium.org/administrators/policy-list-3
    - name: Create Chromium policies directory
      file:
        path: /etc/chromium/policies/managed
        state: directory
      become: yes
      tags: desktop

    - name: Create Chromium JSON policy file
      template:
        src: chromium-policy
        dest: "/etc/chromium/policies/managed/my-policy.json"
      become: yes
      tags: desktop

    - name: Create Chromium extensions directory
      file:
        path: /usr/share/chromium/extensions
        state: directory
      become: yes
      tags: desktop

    - name: Copy browser bookmarks org file
      copy:
        src: browser-bookmarks.org
        dest: ~/stuff/browser-bookmarks.org
      tags: desktop

    - name: Convert org browser bookmarks to html
      command: emacs --batch --eval "(require 'org)" ~/stuff/browser-bookmarks.org --funcall org-html-export-to-html
      tags: desktop


    # ublock is installed through apt
    # # See https://developer.chrome.com/extensions/external_extensions#preferences
    # - name: Create Chromium JSON file to install extensions for all users
    #   template:
    #     src: chrome-extensions.json
    #     dest: "/usr/share/chromium-browser/extensions/{{ item }}.json"
    #   with_items:
    #     - cjpalhdlnbpafiamejdnhcphjbkeiagm # ublock
